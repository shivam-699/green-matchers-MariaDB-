import streamlit as st
import requests
import time

# Expanded Translation dictionary for Top 10 Indian Languages
translations = {
    "hi": {  # Hindi (1st)
        "title": "ЁЯМ▒ рдЧреНрд░реАрди рдореИрдЪрд░реНрд╕: AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рдкрд░реНрдпрд╛рд╡рд░рдгреАрдп рдиреМрдХрд░реА рдХреНрд░рд╛рдВрддрд┐",
        "powered_by": "xAI рдХреЗ Grok рджреНрд╡рд╛рд░рд╛ рд╕реЗрдореЗрдВрдЯрд┐рдХ рдореИрдЪрд┐рдВрдЧ",
        "select_skills": "рдЕрдкрдиреА рд╕реНрдХрд┐рд▓реНрд╕ рдЪреБрдиреЗрдВ (рдпрд╛ рдирдИ рдЬреЛрдбрд╝реЗрдВ):",
        "button": "рдЧреНрд░реАрди рдЬреЙрдмреНрд╕ рдФрд░ рдХрд╣рд╛рдирд┐рдпрд╛рдВ рдЦреЛрдЬреЗрдВ",
        "matches_header": "рдЬреЙрдм рдореИрдЪ рджреЗрдЦреЗрдВ",
        "story_header": "рдЕрдкрдиреА рдЧреНрд░реАрди рдХрд╣рд╛рдиреА рдкрдврд╝реЗрдВ",
        "no_matches": "рдХреЛрдИ рдореИрдЪ рдирд╣реАрдВ рдорд┐рд▓рд╛тАФрдмреИрдХрдПрдВрдб рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рдЕрдзрд┐рдХ рдЬреЙрдмреНрд╕ рдЬреЛрдбрд╝реЗрдВ!",
        "enter_skills": "рдХреГрдкрдпрд╛ рдХрдо рд╕реЗ рдХрдо рдПрдХ рд╕реНрдХрд┐рд▓ рдЪреБрдиреЗрдВ рдпрд╛ рджрд░реНрдЬ рдХрд░реЗрдВ!",
        "error": "рддреНрд░реБрдЯрд┐: {error} - рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВ рдХрд┐ рдмреИрдХрдПрдВрдб http://127.0.0.1:8000 рдкрд░ рдЪрд▓ рд░рд╣рд╛ рд╣реИ!",
        "success": "рдореИрдЪ рдорд┐рд▓ рдЧрдП!"
    },
    "bn": {  # Bengali (2nd)
        "title": "ЁЯМ▒ ржЧрзНрж░рж┐ржи ржорзНржпрж╛ржЪрж╛рж░рзНрж╕: ржПржЖржЗ-ржЪрж╛рж▓рж┐ржд ржЗржХрзЛ ржЬржм ржмрж┐ржкрзНрж▓ржм",
        "powered_by": "xAI-ржПрж░ Grok ржжрзНржмрж╛рж░рж╛ рж╕рзЗржорж╛ржирзНржЯрж┐ржХ ржорзНржпрж╛ржЪрж┐ржВ",
        "select_skills": "ржЖржкржирж╛рж░ ржжржХрзНрж╖рждрж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи (ржирждрзБржи ржпрзЛржЧ ржХрж░рзБржи):",
        "button": "ржЧрзНрж░рж┐ржи ржЪрж╛ржХрж░рж┐ ржПржмржВ ржЧрж▓рзНржк ржЖржмрж┐рж╖рзНржХрж╛рж░ ржХрж░рзБржи",
        "matches_header": "ржЪрж╛ржХрж░рж┐рж░ ржорж┐рж▓ ржжрзЗржЦрзБржи",
        "story_header": "ржЖржкржирж╛рж░ ржЧрзНрж░рж┐ржи ржЧрж▓рзНржк ржкржбрж╝рзБржи",
        "no_matches": "ржХрзЛржирзЛ ржорж┐рж▓ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐тАФржмрзНржпрж╛ржХржПржирзНржбрзЗрж░ ржорж╛ржзрзНржпржорзЗ ржЖрж░ржУ ржЪрж╛ржХрж░рж┐ ржпрзЛржЧ ржХрж░рзБржи!",
        "enter_skills": "ржжржпрж╝рж╛ ржХрж░рзЗ ржХржоржкржХрзНрж╖рзЗ ржПржХржЯрж┐ ржжржХрзНрж╖рждрж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи ржмрж╛ рж▓рж┐ржЦрзБржи!",
        "error": "рждрзНрж░рзБржЯрж┐: {error} - ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзБржи ржпрзЗ ржмрзНржпрж╛ржХржПржирзНржб http://127.0.0.1:8000 ржЪрж▓ржЫрзЗ!",
        "success": "ржорж┐рж▓ ржкрж╛ржУржпрж╝рж╛ ржЧрзЗржЫрзЗ!"
    },
    "mr": {  # Marathi (3rd)
        "title": "ЁЯМ▒ рдЧреНрд░реАрди рдореЕрдЪрд░реНрд╕: AI-рджреНрд╡рд╛рд░реЗ рдЪрд╛рд▓рд┐рдд рдЗрдХреЛ рдиреЛрдХрд░реА рдХреНрд░рд╛рдВрддреА",
        "powered_by": "xAI рдЪреНрдпрд╛ Grok рджреНрд╡рд╛рд░реЗ рд╕реЗрдордБрдЯрд┐рдХ рдореЕрдЪрд┐рдВрдЧ",
        "select_skills": "рддреБрдордЪреНрдпрд╛ рдХреМрд╢рд▓реНрдпрд╛рдВрдЪрд╛ рдирд┐рд╡рдбрд╛ (рдХрд┐рдВрд╡рд╛ рдирд╡реАрди рдЬреЛрдбрд╛):",
        "button": "рдЧреНрд░реАрди рдиреЛрдХрд▒реНрдпрд╛ рдЖрдгрд┐ рдХрдерд╛ рд╢реЛрдзрд╛",
        "matches_header": "рдиреЛрдХрд░реА рдореЕрдЪ рдкрд╣рд╛",
        "story_header": "рддреБрдордЪреА рдЧреНрд░реАрди рдХрдерд╛ рд╡рд╛рдЪрд╛",
        "no_matches": "рдХреЛрдгрддрд╛рд╣реА рдореЕрдЪ рд╕рд╛рдкрдбрд▓рд╛ рдирд╛рд╣реАтАФрдмреЕрдХрдПрдВрдбрджреНрд╡рд╛рд░реЗ рдЕрдзрд┐рдХ рдиреЛрдХрд▒реНрдпрд╛ рдЬреЛрдбрд╛!",
        "enter_skills": "рдХреГрдкрдпрд╛ рдХрд┐рдорд╛рди рдПрдХ рдХреМрд╢рд▓реНрдп рдирд┐рд╡рдбрд╛ рдХрд┐рдВрд╡рд╛ рдЯрд╛рдХрд╛!",
        "error": "рддреНрд░реБрдЯреА: {error} - рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░рд╛ рдХреА рдмреЕрдХрдПрдВрдб http://127.0.0.1:8000 рд╡рд░ рдЪрд╛рд▓реВ рдЖрд╣реЗ!",
        "success": "рдореЕрдЪ рд╕рд╛рдкрдбрд▓реЗ!"
    },
    "te": {  # Telugu (4th)
        "title": "ЁЯМ▒ р░Чр▒Нр░░р▒Ар░ир▒Н р░ор▒Нр░пр░╛р░Ър░░р▒Нр░╕р▒Н: AI-р░Ър▒Зр░д р░ир░бр░┐р░Ър▒З р░Ор░Хр▒Л р░Йр░жр▒Нр░пр▒Лр░Ч р░╡р░┐р░кр▒Нр░▓р░╡р░В",
        "powered_by": "xAI р░пр▒Кр░Хр▒Нр░Х Grok р░жр▒Нр░╡р░╛р░░р░╛ р░╕р▒Жр░ор░╛р░Вр░Яр░┐р░Хр▒Н р░ор▒Нр░пр░╛р░Ър░┐р░Вр░Чр▒Н",
        "select_skills": "р░ор▒А р░ир▒Ир░кр▒Бр░гр▒Нр░пр░╛р░▓р░ир▒Б р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐ (р░Хр▒Кр░др▒Нр░др░╡р░┐ р░Ьр▒Лр░бр░┐р░Вр░Ър░Вр░бр░┐):",
        "button": "р░Чр▒Нр░░р▒Ар░ир▒Н р░Йр░жр▒Нр░пр▒Лр░Чр░╛р░▓р▒Б р░ор░░р░┐р░пр▒Б р░Хр░ер░▓р▒Б р░Хр░ир▒Бр░Чр▒Кр░ир░Вр░бр░┐",
        "matches_header": "р░Йр░жр▒Нр░пр▒Лр░Ч р░ор▒Нр░пр░╛р░Ър▒НтАМр░▓р▒Б р░Ър▒Вр░бр░Вр░бр░┐",
        "story_header": "р░ор▒А р░Чр▒Нр░░р▒Ар░ир▒Н р░Хр░ер░ир▒Б р░Ър░жр░╡р░Вр░бр░┐",
        "no_matches": "р░ор▒Нр░пр░╛р░Ър▒НтАМр░▓р▒Б р░▓р▒Зр░╡р▒БтАФр░мр▒Нр░пр░╛р░Хр▒Жр░Вр░бр▒Н р░жр▒Нр░╡р░╛р░░р░╛ р░ор░░р░┐р░ир▒Нр░ир░┐ р░Йр░жр▒Нр░пр▒Лр░Чр░╛р░▓р▒Б р░Ьр▒Лр░бр░┐р░Вр░Ър░Вр░бр░┐!",
        "enter_skills": "р░жр░пр░Ър▒Зр░╕р░┐ р░Хр░ир▒Ар░╕р░В р░Тр░Х р░ир▒Ир░кр▒Бр░гр▒Нр░пр░╛р░ир▒Нр░ир░┐ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐ р░▓р▒Зр░жр░╛ р░Ор░Вр░Яр░░р▒Н р░Ър▒Зр░пр░Вр░бр░┐!",
        "error": "р░кр▒Кр░░р▒Нр░кр▒Б: {error} - р░мр▒Нр░пр░╛р░Хр▒Жр░Вр░бр▒Н http://127.0.0.1:8000 р░кр▒И р░░р░ир▒Н р░Ер░╡р▒Бр░др▒Бр░ир▒Нр░ир░Яр▒Нр░▓р▒Б р░ир░┐р░░р▒Нр░зр░╛р░░р░┐р░Вр░Ър░Вр░бр░┐!",
        "success": "р░ор▒Нр░пр░╛р░Ър▒НтАМр░▓р▒Б р░Хр░ир▒Бр░Чр▒Кр░ир░мр░бр▒Нр░бр░╛р░пр░┐!"
    },
    "ta": {  # Tamil (5th)
        "title": "ЁЯМ▒ рокроЪрпБроорпИ рокрпКро░рпБродрпНродроЩрпНроХро│рпН: AI-роЖро▓рпН роЗропроХрпНроХрокрпНрокроЯрпБроорпН рокроЪрпБроорпИ ро╡рпЗро▓рпИро╡ро╛ропрпНрокрпНрокрпБ рокрпБро░роЯрпНроЪро┐",
        "powered_by": "xAI-роЗройрпН Grok роорпВро▓роорпН роЕро░рпНродрпНродро╡рпБро░рпБро╡ро╛роХрпНроХ рокрпКро░рпБродрпНродроорпН",
        "select_skills": "роЙроЩрпНроХро│рпН родро┐ро▒ройрпНроХро│рпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН (рокрпБродро┐ропро╡ро▒рпНро▒рпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН):",
        "button": "рокроЪрпБроорпИ ро╡рпЗро▓рпИроХро│рпН рооро▒рпНро▒рпБроорпН роХродрпИроХро│рпИ роХрогрпНроЯро▒ро┐",
        "matches_header": "ро╡рпЗро▓рпИ рокрпКро░рпБродрпНродроЩрпНроХро│рпИ рокро╛ро░рпН",
        "story_header": "роЙроЩрпНроХро│рпН рокроЪрпБроорпИ роХродрпИропрпИ рокроЯро┐",
        "no_matches": "рокрпКро░рпБродрпНродроЩрпНроХро│рпН роЗро▓рпНро▓рпИтАФрокро┐ройрпНройрогро┐ роорпВро▓роорпН роорпЗро▓рпБроорпН ро╡рпЗро▓рпИроХро│рпИ роЪрпЗро░рпНроХрпНроХро╡рпБроорпН!",
        "enter_skills": "роХрпБро▒рпИроирпНродродрпБ роТро░рпБ родро┐ро▒роорпИропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН роЕро▓рпНро▓родрпБ роЙро│рпНро│ро┐роЯро╡рпБроорпН!",
        "error": "рокро┐ро┤рпИ: {error} - рокро┐ройрпНройрогро┐ http://127.0.0.1:8000 роЗро▓рпН роЗропроЩрпНроХрпБро╡родрпИ роЙро▒рпБродро┐ роЪрпЖропрпНропро╡рпБроорпН!",
        "success": "рокрпКро░рпБродрпНродроЩрпНроХро│рпН роХро┐роЯрпИродрпНродрой!"
    },
    "gu": {  # Gujarati (6th)
        "title": "ЁЯМ▒ ркЧрлНрк░рлАрки ркорлЗркЪрк░рлНрк╕: AI-ркжрлНрк╡рк╛рк░рк╛ ркЪрк▓рк╛рк╡рк╡рк╛ркорк╛ркВ ркЖрк╡ркдрлА ркЗркХрлЛ ркЬрлЛркм ркХрлНрк░рк╛ркВркдрк┐",
        "powered_by": "xAI ркирк╛ Grok ркжрлНрк╡рк╛рк░рк╛ рк╕рлЗркорлЗркирлНркЯрк┐ркХ ркорлЗркЪрк┐ркВркЧ",
        "select_skills": "ркдркорк╛рк░рлА ркХрлБрк╢рк│ркдрк╛ркУ рккрк╕ркВркж ркХрк░рлЛ (ркЕркерк╡рк╛ ркирк╡рлА ркЙркорлЗрк░рлЛ):",
        "button": "ркЧрлНрк░рлАрки ркЬрлЛркмрлНрк╕ ркЕркирлЗ рк╡рк╛рк░рлНркдрк╛ркУ рк╢рлЛркзрлЛ",
        "matches_header": "ркЬрлЛркм ркорлЗркЪ ркЬрлБркУ",
        "story_header": "ркдркорк╛рк░рлА ркЧрлНрк░рлАрки рк╡рк╛рк░рлНркдрк╛ рк╡рк╛ркВркЪрлЛ",
        "no_matches": "ркХрлЛркИ ркорлЗркЪ ркорк│рлНркпрлБркВ ркиркерлАтАФркмрлЗркХркПркирлНркб ркжрлНрк╡рк╛рк░рк╛ рк╡ркзрлБ ркЬрлЛркмрлНрк╕ ркЙркорлЗрк░рлЛ!",
        "enter_skills": "ркХрлГрккрк╛ ркХрк░рлАркирлЗ ркУркЫрк╛ркорк╛ркВ ркУркЫрлБркВ ркПркХ ркХрлБрк╢рк│ркдрк╛ рккрк╕ркВркж ркХрк░рлЛ ркЕркерк╡рк╛ рк▓ркЦрлЛ!",
        "error": "ркнрлВрк▓: {error} - ркЦрк╛ркдрк░рлА ркХрк░рлЛ ркХрлЗ ркмрлЗркХркПркирлНркб http://127.0.0.1:8000 рккрк░ ркЪрк╛рк▓рлА рк░рк╣рлНркпрлБркВ ркЫрлЗ!",
        "success": "ркорлЗркЪ ркорк│рлНркпрк╛!"
    },
    "ur": {  # Urdu (7th)
        "title": "ЁЯМ▒ ┌п╪▒█М┘Ж ┘Е█М┌Ж╪▒╪▓: AI ╪│█Т ┌Ж┘Д┘Ж█Т ┘И╪з┘Д█М ╪з█М┌й┘И ╪м╪з╪и ╪з┘Ж┘В┘Д╪з╪и",
        "powered_by": "xAI ┌й█Т Grok ┌й█Т ╪░╪▒█М╪╣█Т ╪│█М┘Е┘Ж┘╣┌й ┘Е█М┌Ж┘Ж┌п",
        "select_skills": "╪з┘╛┘Ж█М ┘Е█Б╪з╪▒╪к█М┌║ ┘Е┘Ж╪к╪о╪и ┌й╪▒█М┌║ (█М╪з ┘Ж╪ж█М ╪┤╪з┘Е┘Д ┌й╪▒█М┌║):",
        "button": "┌п╪▒█М┘Ж ╪м╪з╪и╪▓ ╪з┘И╪▒ ┌й█Б╪з┘Ж█М╪з┌║ ╪к┘Д╪з╪┤ ┌й╪▒█М┌║",
        "matches_header": "╪м╪з╪и ┘Е█М┌Ж ╪п█М┌й┌╛█М┌║",
        "story_header": "╪з┘╛┘Ж█М ┌п╪▒█М┘Ж ┌й█Б╪з┘Ж█М ┘╛┌С┌╛█М┌║",
        "no_matches": "┌й┘И╪ж█М ┘Е█М┌Ж ┘Ж█Б█М┌║ ┘Е┘Д╪зтАФ╪и█М┌й ╪з█М┘Ж┌И ┌й█Т ╪░╪▒█М╪╣█Т ┘Е╪▓█М╪п ╪м╪з╪и╪▓ ╪┤╪з┘Е┘Д ┌й╪▒█М┌║!",
        "enter_skills": "╪и╪▒╪з█Б ┘Е█Б╪▒╪и╪з┘Ж█М ┌й┘Е ╪з╪▓ ┌й┘Е ╪з█М┌й ┘Е█Б╪з╪▒╪к ┘Е┘Ж╪к╪о╪и ┌й╪▒█М┌║ █М╪з ╪п╪▒╪м ┌й╪▒█М┌║!",
        "error": "╪║┘Д╪╖█М: {error} - █М┘В█М┘Ж█М ╪и┘Ж╪з╪ж█М┌║ ┌й█Б ╪и█М┌й ╪з█М┘Ж┌И http://127.0.0.1:8000 ┘╛╪▒ ┌Ж┘Д ╪▒█Б╪з █Б█Т!",
        "success": "┘Е█М┌Ж ┘Е┘Д ┌п╪ж█Т!"
    },
    "kn": {  # Kannada (8th)
        "title": "ЁЯМ▒ р▓Чр│Нр▓░р│Ар▓ир│Н р▓ор│Нр▓пр▓╛р▓Ър▓░р│Нр▓╕р│Н: AI-р▓Ър▓╛р▓▓р▓┐р▓д р▓Зр▓Хр│Л р▓Йр▓жр│Нр▓пр│Лр▓Ч р▓Хр│Нр▓░р▓╛р▓Вр▓др▓┐",
        "powered_by": "xAI р▓и Grok р▓ор│Вр▓▓р▓Х р▓╕р│Жр▓ор│Нр▓пр▓╛р▓Вр▓Яр▓┐р▓Хр│Н р▓ор│Нр▓пр▓╛р▓Ър▓┐р▓Вр▓Чр│Н",
        "select_skills": "р▓ир▓┐р▓ор│Нр▓о р▓Хр│Мр▓╢р▓▓р│Нр▓пр▓Чр▓│р▓ир│Нр▓ир│Б р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐ (р▓Ер▓ер▓╡р▓╛ р▓╣р│Кр▓╕р▓жр▓ир│Нр▓ир│Б р▓╕р│Зр▓░р▓┐р▓╕р▓┐):",
        "button": "р▓Чр│Нр▓░р│Ар▓ир│Н р▓Йр▓жр│Нр▓пр│Лр▓Чр▓Чр▓│р│Б р▓ор▓др│Нр▓др│Б р▓Хр▓ер│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓Хр▓Вр▓бр│Бр▓╣р▓┐р▓бр▓┐р▓пр▓┐р▓░р▓┐",
        "matches_header": "р▓Йр▓жр│Нр▓пр│Лр▓Ч р▓╣р│Кр▓Вр▓жр▓╛р▓гр▓┐р▓Хр│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓ир│Лр▓бр▓┐",
        "story_header": "р▓ир▓┐р▓ор│Нр▓о р▓Чр│Нр▓░р│Ар▓ир│Н р▓Хр▓ер│Жр▓пр▓ир│Нр▓ир│Б р▓Ур▓жр▓┐",
        "no_matches": "р▓╣р│Кр▓Вр▓жр▓╛р▓гр▓┐р▓Хр│Жр▓Чр▓│р│Б р▓жр│Кр▓░р│Жр▓др▓┐р▓▓р│Нр▓▓тАФр▓мр│Нр▓пр▓╛р▓Хр│Жр▓Вр▓бр│Н р▓ор│Вр▓▓р▓Х р▓╣р│Жр▓Ър│Нр▓Ър│Б р▓Йр▓жр│Нр▓пр│Лр▓Чр▓Чр▓│р▓ир│Нр▓ир│Б р▓╕р│Зр▓░р▓┐р▓╕р▓┐!",
        "enter_skills": "р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓Хр▓ир▓┐р▓╖р│Нр▓а р▓Тр▓Вр▓жр│Б р▓Хр│Мр▓╢р▓▓р│Нр▓пр▓╡р▓ир│Нр▓ир│Б р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐ р▓Ер▓ер▓╡р▓╛ р▓ир▓ор│Вр▓жр▓┐р▓╕р▓┐!",
        "error": "р▓жр│Лр▓╖: {error} - р▓мр│Нр▓пр▓╛р▓Хр│Жр▓Вр▓бр│Н http://127.0.0.1:8000 р▓ир▓▓р│Нр▓▓р▓┐ р▓Ър▓▓р▓┐р▓╕р│Бр▓др│Нр▓др▓┐р▓жр│Жр▓пр│Жр▓Вр▓жр│Б р▓Цр▓Ър▓┐р▓др▓кр▓бр▓┐р▓╕р▓┐!",
        "success": "р▓╣р│Кр▓Вр▓жр▓╛р▓гр▓┐р▓Хр│Жр▓Чр▓│р│Б р▓╕р▓┐р▓Хр│Нр▓Хр▓┐р▓╡р│Ж!"
    },
    "or": {  # Odia (9th)
        "title": "ЁЯМ▒ рмЧрнНрм░рм┐рмирнН рморнНрнЯрм╛рмЪрм░рнНрм╕: AI-рмжрнНрн▒рм╛рм░рм╛ рмЪрм╛рм▓рм┐рмд рмЗрмХрнЛ рмЬрммрнН рммрм┐рмкрнНрм│рмм",
        "powered_by": "xAIрм░ Grok рмжрнНрн▒рм╛рм░рм╛ рм╕рнЗрморм╛рмгрнНрмЯрм┐рмХрнН рморнНрнЯрм╛рмЪрм┐рмВ",
        "select_skills": "рмдрнБрморм░ рм╕рнНрмХрм┐рм▓рнНрмЧрнБрмбрм╝рм┐рмХрнБ рммрм╛рмЫрмирнНрмдрнБ (рмирм╛рм╣рм┐рмБрмдрнЗ рмирнВрмЖ рмпрнЛрмбрм╝рмирнНрмдрнБ):",
        "button": "рмЧрнНрм░рм┐рмирнН рмЬрммрнН рмПрммрмВ рмХрм╛рм╣рм╛рмгрнА рмЦрнЛрмЬрмирнНрмдрнБ",
        "matches_header": "рмЬрммрнН рморнНрнЯрм╛рмЪ рмжрнЗрмЦрмирнНрмдрнБ",
        "story_header": "рмдрнБрморм░ рмЧрнНрм░рм┐рмирнН рмХрм╛рм╣рм╛рмгрнА рмкрмврм╝рмирнНрмдрнБ",
        "no_matches": "рмХрнМрмгрм╕рм┐ рморнНрнЯрм╛рмЪрнН рморм┐рм│рм┐рм▓рм╛ рмирм╛рм╣рм┐рмБтАФрммрнНрнЯрм╛рмХрнЗрмгрнНрмб рморм╛рмзрнНрнЯрморм░рнЗ рмЕрмзрм┐рмХ рмЬрммрнН рмпрнЛрмбрм╝рмирнНрмдрнБ!",
        "enter_skills": "рмжрнЯрм╛рмХрм░рм┐ рмЕрмдрм┐ рмХрморм░рнЗ рмПрмХ рм╕рнНрмХрм┐рм▓рнН рммрм╛рмЫрмирнНрмдрнБ рмХрм┐рморнНрммрм╛ рм▓рнЗрмЦрмирнНрмдрнБ!",
        "error": "рмдрнНрм░рнБрмЯрм┐: {error} - рмирм┐рм╢рнНрмЪрм┐рмд рмХрм░рмирнНрмдрнБ рмпрнЗ рммрнНрнЯрм╛рмХрнЗрмгрнНрмб http://127.0.0.1:8000 рмЪрм╛рм▓рнБ рмЕрмЫрм┐!",
        "success": "рморнНрнЯрм╛рмЪрнН рморм┐рм│рм┐рм▓рм╛!"
    },
    "ml": {  # Malayalam (10th)
        "title": "ЁЯМ▒ р┤Чр╡Нр┤░р╡Ар╡╗ р┤ор┤╛р┤Ър╡Нр┤Ър╡Зр┤┤р╡Нр┤╕р╡Н: AI-р┤ир╡НтАНр┤▒р╡Ж р┤╕р┤╣р┤╛р┤пр┤др╡Нр┤др╡Лр┤Яр╡Ж р┤кр┤░р┤┐р┤╕р╡Нр┤ер┤┐р┤др┤┐ р┤╕р╡Чр┤╣р╡Гр┤ж р┤Ьр╡Лр┤▓р┤┐ р┤╡р┤┐р┤кр╡Нр┤▓р┤╡р┤В",
        "powered_by": "xAI-р┤ир╡Нр┤▒р╡Ж Grok р┤╡р┤┤р┤┐ р┤╕р╡Жр┤ор┤╛р┤ир╡Нр┤▒р┤┐р┤Хр╡Н р┤ор┤╛р┤Ър╡Нр┤Ър┤┐р┤Вр┤Чр╡Н",
        "select_skills": "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Хр┤┤р┤┐р┤╡р╡Бр┤Хр╡╛ р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤Хр╡Нр┤Хр╡Бр┤Х (р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤кр╡Бр┤др┤┐р┤пр┤др╡Н р┤Ър╡Зр╡╝р┤Хр╡Нр┤Хр╡Бр┤Х):",
        "button": "р┤Чр╡Нр┤░р╡Ар╡╗ р┤Ьр╡Лр┤▓р┤┐р┤Хр┤│р╡Бр┤В р┤Хр┤ер┤Хр┤│р╡Бр┤В р┤Хр┤гр╡Нр┤Яр╡Жр┤др╡Нр┤др╡Бр┤Х",
        "matches_header": "р┤Ьр╡Лр┤▓р┤┐ р┤ор┤╛р┤Ър╡Нр┤Ър╡Бр┤Хр╡╛ р┤Хр┤╛р┤гр╡Бр┤Х",
        "story_header": "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Чр╡Нр┤░р╡Ар╡╗ р┤Хр┤е р┤╡р┤╛р┤пр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х",
        "no_matches": "р┤ор┤╛р┤Ър╡Нр┤Ър╡Бр┤Хр╡╛ р┤Хр┤┐р┤Яр╡Нр┤Яр┤┐р┤пр┤┐р┤▓р╡Нр┤▓тАФр┤мр┤╛р┤Хр╡Нр┤Хр╡НтАМр┤Ор╡╗р┤бр╡Н р┤╡р┤┤р┤┐ р┤Хр╡Вр┤Яр╡Бр┤др╡╜ р┤Ьр╡Лр┤▓р┤┐р┤Хр╡╛ р┤Ър╡Зр╡╝р┤Хр╡Нр┤Хр╡Бр┤Х!",
        "enter_skills": "р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤Хр╡Бр┤▒р┤Юр╡Нр┤Юр┤др╡Н р┤Тр┤░р╡Б р┤Хр┤┤р┤┐р┤╡р╡Н р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤Хр╡Нр┤Хр╡Бр┤Х р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤ир╡╜р┤Хр╡Бр┤Х!",
        "error": "р┤кр┤┐р┤╢р┤Хр╡Н: {error} - р┤мр┤╛р┤Хр╡Нр┤Хр╡НтАМр┤Ор╡╗р┤бр╡Н http://127.0.0.1:8000-р╡╜ р┤кр╡Нр┤░р┤╡р╡╝р┤др╡Нр┤др┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Бр┤гр╡Нр┤Яр╡Жр┤ир╡Нр┤ир╡Н р┤Йр┤▒р┤кр╡Нр┤кр┤╛р┤Хр╡Нр┤Хр╡Бр┤Х!",
        "success": "р┤ор┤╛р┤Ър╡Нр┤Ър╡Бр┤Хр╡╛ р┤Хр┤┐р┤Яр╡Нр┤Яр┤┐!"
    },
    "en": {  # English (default, for completeness)
        "title": "ЁЯМ▒ Green Matchers: AI-Powered Eco Job Revolution",
        "powered_by": "Powered by xAIтАЩs Grok for Semantic Matching",
        "select_skills": "Select your skills (or type new ones):",
        "button": "Discover Green Jobs & Stories",
        "matches_header": "View Job Matches",
        "story_header": "Read Your Green Story",
        "no_matches": "No matches foundтАФadd more jobs via backend!",
        "enter_skills": "Please select or enter at least one skill!",
        "error": "Error: {error} - Ensure backend is running at http://127.0.0.1:8000!",
        "success": "Matches found!"
    }
}

# Session state for language
if "lang" not in st.session_state:
    st.session_state.lang = "en"

# Language selector with all 10 (plus English)
lang_options = ["en", "hi", "bn", "mr", "te", "ta", "gu", "ur", "kn", "or", "ml"]
lang_names = ["English", "Hindi", "Bengali", "Marathi", "Telugu", "Tamil", "Gujarati", "Urdu", "Kannada", "Odia", "Malayalam"]
lang_index = lang_options.index(st.session_state.lang)
lang = st.selectbox("Select Language", lang_names, index=lang_index, key="lang_select")
st.session_state.lang = lang_options[lang_names.index(lang)]

# Custom CSS (unchanged from previous)
st.markdown(
    """
    <style>
    .main {
        background-color: #f0fff0; /* Light green */
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    .stButton>button {
        background-color: #28a745; /* Green button */
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
    }
    .stButton>button:hover {
        background-color: #218838;
    }
    .stHeader {
        color: #155724; /* Dark green */
        font-size: 24px;
        font-weight: bold;
        text-align: center;
    }
    .stText {
        color: #333;
        font-size: 16px;
        line-height: 1.6;
    }
    </style>
    """,
    unsafe_allow_html=True
)

# Dynamic content
t = translations[st.session_state.lang]
st.markdown(f'<div class="stHeader">{t["title"]}</div>', unsafe_allow_html=True)
st.markdown(f'<p class="stText" style="text-align:center;">{t["powered_by"]}</p>', unsafe_allow_html=True)

# Skill input (multi-select with common skills)
skills = st.multiselect(
    t["select_skills"],
    ["Python", "Django", "AI", "Machine Learning", "Data Analysis", "Java", "Web Development"],  # Expanded options
    default=["Python"]
)
skill_text = ", ".join(skills) if skills else ""

# Button with progress
if st.button(t["button"]):
    if skill_text:
        with st.spinner(t["success"]):
            time.sleep(1)  # Simulate (remove later)
            try:
                match_response = requests.post("http://127.0.0.1:8000/match_jobs", json={"skill_text": skill_text})
                matches = match_response.json()
                if matches:
                    st.success(t["success"])
                    with st.expander(t["matches_header"]):
                        for match in matches:
                            st.markdown(f"**{match['job_title']}** (Similarity: {match['similarity']:.2f})", unsafe_allow_html=True)
                            st.markdown(f"<div class='stText'>{match['description']}</div>", unsafe_allow_html=True)
                else:
                    st.warning(t["no_matches"])

                narrative_response = requests.post("http://127.0.0.1:8000/generate_narrative", json={"skill_text": skill_text})
                narrative = narrative_response.json()["narrative"]
                with st.expander(t["story_header"]):
                    st.markdown(f"<div class='stText'>{narrative}</div>", unsafe_allow_html=True)

            except Exception as e:
                st.error(t["error"].format(error=str(e)))
    else:
        st.warning(t["enter_skills"])

# PWA (unchanged)
st.markdown("""
<link rel="manifest" href="/manifest.json">
<script>
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('/service-worker.js')
      .then(() => console.log('Service Worker registered'))
      .catch(err => console.log('Service Worker error:', err));
  }
</script>
""", unsafe_allow_html=True)

